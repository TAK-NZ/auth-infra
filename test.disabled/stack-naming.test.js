"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const stack_naming_1 = require("../lib/stack-naming");
describe('Stack Naming', () => {
    describe('generateAuthInfraStackName', () => {
        it('should generate correct auth infra stack name', () => {
            expect((0, stack_naming_1.generateAuthInfraStackName)('prod')).toBe('tak-auth-infra-prod');
            expect((0, stack_naming_1.generateAuthInfraStackName)('dev')).toBe('tak-auth-infra-dev');
            expect((0, stack_naming_1.generateAuthInfraStackName)('test')).toBe('tak-auth-infra-test');
        });
    });
    describe('generateLdapStackName', () => {
        it('should generate correct LDAP stack name', () => {
            expect((0, stack_naming_1.generateLdapStackName)('prod')).toBe('tak-ldap-prod');
            expect((0, stack_naming_1.generateLdapStackName)('dev')).toBe('tak-ldap-dev');
            expect((0, stack_naming_1.generateLdapStackName)('test')).toBe('tak-ldap-test');
        });
    });
    describe('importBaseInfraValue', () => {
        it('should generate correct import value reference', () => {
            expect((0, stack_naming_1.importBaseInfraValue)('prod', 'vpc-id')).toBe('{{resolve:ImportValue:coe-base-prod-vpc-id}}');
            expect((0, stack_naming_1.importBaseInfraValue)('dev', 'subnet-private-a')).toBe('{{resolve:ImportValue:coe-base-dev-subnet-private-a}}');
        });
    });
    describe('generateAuthInfraExportName', () => {
        it('should generate correct auth infra export name', () => {
            expect((0, stack_naming_1.generateAuthInfraExportName)('prod', 'database-endpoint')).toBe('tak-auth-infra-prod-database-endpoint');
            expect((0, stack_naming_1.generateAuthInfraExportName)('dev', 'redis-endpoint')).toBe('tak-auth-infra-dev-redis-endpoint');
        });
    });
    describe('generateLdapExportName', () => {
        it('should generate correct LDAP export name', () => {
            expect((0, stack_naming_1.generateLdapExportName)('prod', 'load-balancer-dns')).toBe('tak-ldap-prod-load-balancer-dns');
            expect((0, stack_naming_1.generateLdapExportName)('dev', 'endpoint')).toBe('tak-ldap-dev-endpoint');
        });
    });
    describe('FIXED_STACK_CONFIG', () => {
        it('should have correct fixed configuration values', () => {
            expect(stack_naming_1.FIXED_STACK_CONFIG.PROJECT).toBe('tak');
            expect(stack_naming_1.FIXED_STACK_CONFIG.AUTH_STACK_PREFIX).toBe('auth-infra');
            expect(stack_naming_1.FIXED_STACK_CONFIG.LDAP_STACK_PREFIX).toBe('ldap');
        });
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RhY2stbmFtaW5nLnRlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJzdGFjay1uYW1pbmcudGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHNEQU82QjtBQUU3QixRQUFRLENBQUMsY0FBYyxFQUFFLEdBQUcsRUFBRTtJQUM1QixRQUFRLENBQUMsNEJBQTRCLEVBQUUsR0FBRyxFQUFFO1FBQzFDLEVBQUUsQ0FBQywrQ0FBK0MsRUFBRSxHQUFHLEVBQUU7WUFDdkQsTUFBTSxDQUFDLElBQUEseUNBQTBCLEVBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMscUJBQXFCLENBQUMsQ0FBQztZQUN2RSxNQUFNLENBQUMsSUFBQSx5Q0FBMEIsRUFBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1lBQ3JFLE1BQU0sQ0FBQyxJQUFBLHlDQUEwQixFQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLHFCQUFxQixDQUFDLENBQUM7UUFDekUsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztJQUVILFFBQVEsQ0FBQyx1QkFBdUIsRUFBRSxHQUFHLEVBQUU7UUFDckMsRUFBRSxDQUFDLHlDQUF5QyxFQUFFLEdBQUcsRUFBRTtZQUNqRCxNQUFNLENBQUMsSUFBQSxvQ0FBcUIsRUFBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztZQUM1RCxNQUFNLENBQUMsSUFBQSxvQ0FBcUIsRUFBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztZQUMxRCxNQUFNLENBQUMsSUFBQSxvQ0FBcUIsRUFBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUM5RCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQyxDQUFDO0lBRUgsUUFBUSxDQUFDLHNCQUFzQixFQUFFLEdBQUcsRUFBRTtRQUNwQyxFQUFFLENBQUMsZ0RBQWdELEVBQUUsR0FBRyxFQUFFO1lBQ3hELE1BQU0sQ0FBQyxJQUFBLG1DQUFvQixFQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyw4Q0FBOEMsQ0FBQyxDQUFDO1lBQ3BHLE1BQU0sQ0FBQyxJQUFBLG1DQUFvQixFQUFDLEtBQUssRUFBRSxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLHVEQUF1RCxDQUFDLENBQUM7UUFDeEgsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztJQUVILFFBQVEsQ0FBQyw2QkFBNkIsRUFBRSxHQUFHLEVBQUU7UUFDM0MsRUFBRSxDQUFDLGdEQUFnRCxFQUFFLEdBQUcsRUFBRTtZQUN4RCxNQUFNLENBQUMsSUFBQSwwQ0FBMkIsRUFBQyxNQUFNLEVBQUUsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyx1Q0FBdUMsQ0FBQyxDQUFDO1lBQy9HLE1BQU0sQ0FBQyxJQUFBLDBDQUEyQixFQUFDLEtBQUssRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLG1DQUFtQyxDQUFDLENBQUM7UUFDekcsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztJQUVILFFBQVEsQ0FBQyx3QkFBd0IsRUFBRSxHQUFHLEVBQUU7UUFDdEMsRUFBRSxDQUFDLDBDQUEwQyxFQUFFLEdBQUcsRUFBRTtZQUNsRCxNQUFNLENBQUMsSUFBQSxxQ0FBc0IsRUFBQyxNQUFNLEVBQUUsbUJBQW1CLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDO1lBQ3BHLE1BQU0sQ0FBQyxJQUFBLHFDQUFzQixFQUFDLEtBQUssRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDO1FBQ2xGLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7SUFFSCxRQUFRLENBQUMsb0JBQW9CLEVBQUUsR0FBRyxFQUFFO1FBQ2xDLEVBQUUsQ0FBQyxnREFBZ0QsRUFBRSxHQUFHLEVBQUU7WUFDeEQsTUFBTSxDQUFDLGlDQUFrQixDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUMvQyxNQUFNLENBQUMsaUNBQWtCLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLENBQUM7WUFDaEUsTUFBTSxDQUFDLGlDQUFrQixDQUFDLGlCQUFpQixDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzVELENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGdlbmVyYXRlQXV0aEluZnJhU3RhY2tOYW1lLFxuICBnZW5lcmF0ZUxkYXBTdGFja05hbWUsXG4gIGltcG9ydEJhc2VJbmZyYVZhbHVlLFxuICBnZW5lcmF0ZUF1dGhJbmZyYUV4cG9ydE5hbWUsXG4gIGdlbmVyYXRlTGRhcEV4cG9ydE5hbWUsXG4gIEZJWEVEX1NUQUNLX0NPTkZJR1xufSBmcm9tICcuLi9saWIvc3RhY2stbmFtaW5nJztcblxuZGVzY3JpYmUoJ1N0YWNrIE5hbWluZycsICgpID0+IHtcbiAgZGVzY3JpYmUoJ2dlbmVyYXRlQXV0aEluZnJhU3RhY2tOYW1lJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgZ2VuZXJhdGUgY29ycmVjdCBhdXRoIGluZnJhIHN0YWNrIG5hbWUnLCAoKSA9PiB7XG4gICAgICBleHBlY3QoZ2VuZXJhdGVBdXRoSW5mcmFTdGFja05hbWUoJ3Byb2QnKSkudG9CZSgndGFrLWF1dGgtaW5mcmEtcHJvZCcpO1xuICAgICAgZXhwZWN0KGdlbmVyYXRlQXV0aEluZnJhU3RhY2tOYW1lKCdkZXYnKSkudG9CZSgndGFrLWF1dGgtaW5mcmEtZGV2Jyk7XG4gICAgICBleHBlY3QoZ2VuZXJhdGVBdXRoSW5mcmFTdGFja05hbWUoJ3Rlc3QnKSkudG9CZSgndGFrLWF1dGgtaW5mcmEtdGVzdCcpO1xuICAgIH0pO1xuICB9KTtcblxuICBkZXNjcmliZSgnZ2VuZXJhdGVMZGFwU3RhY2tOYW1lJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgZ2VuZXJhdGUgY29ycmVjdCBMREFQIHN0YWNrIG5hbWUnLCAoKSA9PiB7XG4gICAgICBleHBlY3QoZ2VuZXJhdGVMZGFwU3RhY2tOYW1lKCdwcm9kJykpLnRvQmUoJ3Rhay1sZGFwLXByb2QnKTtcbiAgICAgIGV4cGVjdChnZW5lcmF0ZUxkYXBTdGFja05hbWUoJ2RldicpKS50b0JlKCd0YWstbGRhcC1kZXYnKTtcbiAgICAgIGV4cGVjdChnZW5lcmF0ZUxkYXBTdGFja05hbWUoJ3Rlc3QnKSkudG9CZSgndGFrLWxkYXAtdGVzdCcpO1xuICAgIH0pO1xuICB9KTtcblxuICBkZXNjcmliZSgnaW1wb3J0QmFzZUluZnJhVmFsdWUnLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCBnZW5lcmF0ZSBjb3JyZWN0IGltcG9ydCB2YWx1ZSByZWZlcmVuY2UnLCAoKSA9PiB7XG4gICAgICBleHBlY3QoaW1wb3J0QmFzZUluZnJhVmFsdWUoJ3Byb2QnLCAndnBjLWlkJykpLnRvQmUoJ3t7cmVzb2x2ZTpJbXBvcnRWYWx1ZTpjb2UtYmFzZS1wcm9kLXZwYy1pZH19Jyk7XG4gICAgICBleHBlY3QoaW1wb3J0QmFzZUluZnJhVmFsdWUoJ2RldicsICdzdWJuZXQtcHJpdmF0ZS1hJykpLnRvQmUoJ3t7cmVzb2x2ZTpJbXBvcnRWYWx1ZTpjb2UtYmFzZS1kZXYtc3VibmV0LXByaXZhdGUtYX19Jyk7XG4gICAgfSk7XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdnZW5lcmF0ZUF1dGhJbmZyYUV4cG9ydE5hbWUnLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCBnZW5lcmF0ZSBjb3JyZWN0IGF1dGggaW5mcmEgZXhwb3J0IG5hbWUnLCAoKSA9PiB7XG4gICAgICBleHBlY3QoZ2VuZXJhdGVBdXRoSW5mcmFFeHBvcnROYW1lKCdwcm9kJywgJ2RhdGFiYXNlLWVuZHBvaW50JykpLnRvQmUoJ3Rhay1hdXRoLWluZnJhLXByb2QtZGF0YWJhc2UtZW5kcG9pbnQnKTtcbiAgICAgIGV4cGVjdChnZW5lcmF0ZUF1dGhJbmZyYUV4cG9ydE5hbWUoJ2RldicsICdyZWRpcy1lbmRwb2ludCcpKS50b0JlKCd0YWstYXV0aC1pbmZyYS1kZXYtcmVkaXMtZW5kcG9pbnQnKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgZGVzY3JpYmUoJ2dlbmVyYXRlTGRhcEV4cG9ydE5hbWUnLCAoKSA9PiB7XG4gICAgaXQoJ3Nob3VsZCBnZW5lcmF0ZSBjb3JyZWN0IExEQVAgZXhwb3J0IG5hbWUnLCAoKSA9PiB7XG4gICAgICBleHBlY3QoZ2VuZXJhdGVMZGFwRXhwb3J0TmFtZSgncHJvZCcsICdsb2FkLWJhbGFuY2VyLWRucycpKS50b0JlKCd0YWstbGRhcC1wcm9kLWxvYWQtYmFsYW5jZXItZG5zJyk7XG4gICAgICBleHBlY3QoZ2VuZXJhdGVMZGFwRXhwb3J0TmFtZSgnZGV2JywgJ2VuZHBvaW50JykpLnRvQmUoJ3Rhay1sZGFwLWRldi1lbmRwb2ludCcpO1xuICAgIH0pO1xuICB9KTtcblxuICBkZXNjcmliZSgnRklYRURfU1RBQ0tfQ09ORklHJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgaGF2ZSBjb3JyZWN0IGZpeGVkIGNvbmZpZ3VyYXRpb24gdmFsdWVzJywgKCkgPT4ge1xuICAgICAgZXhwZWN0KEZJWEVEX1NUQUNLX0NPTkZJRy5QUk9KRUNUKS50b0JlKCd0YWsnKTtcbiAgICAgIGV4cGVjdChGSVhFRF9TVEFDS19DT05GSUcuQVVUSF9TVEFDS19QUkVGSVgpLnRvQmUoJ2F1dGgtaW5mcmEnKTtcbiAgICAgIGV4cGVjdChGSVhFRF9TVEFDS19DT05GSUcuTERBUF9TVEFDS19QUkVGSVgpLnRvQmUoJ2xkYXAnKTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdfQ==