name: Demo Testing Pipeline

on:
  push:
    branches: [main]
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '.gitignore'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

concurrency:
  group: demo-deploy
  cancel-in-progress: false

jobs:
  # Run CDK unit tests and linting
  test:
    uses: ./.github/workflows/cdk-test.yml

  # Build Docker images for demo environment
  build-images:
    uses: ./.github/workflows/demo-build.yml
    secrets: inherit

  # Validate production configuration without deploying
  # Runs in parallel with build-images to save time
  validate-prod:
    runs-on: ubuntu-latest
    environment: demo
    needs: [test]
    steps:
      - name: Setup CDK Environment
        uses: ./.github/actions/setup-cdk
        with:
          aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHubActions-Demo

      - name: Validate CDK Synthesis (Prod Profile)
        run: npm run cdk synth -- --context envType=prod --context stackName=${{ vars.STACK_NAME }} --context adminUserEmail=${{ vars.AUTHENTIK_ADMIN_EMAIL }}

      - name: Validate Change Set
        run: |
          # Check if override is requested
          if [[ "${{ github.event.head_commit.message }}" == *"[force-deploy]"* ]]; then
            echo "ðŸš¨ Force deploy detected - skipping change set validation"
          else
            ./scripts/github/validate-changeset.sh TAK-${{ vars.STACK_NAME }}-AuthInfra
          fi

  # Deploy demo environment with production configuration for testing
  # Uses built images and runs automated tests
  deploy-and-test:
    runs-on: ubuntu-latest
    environment: demo
    needs: [validate-prod, build-images]
    outputs:
      authentik-tag: ${{ steps.images.outputs.authentik-tag }}
      ldap-tag: ${{ steps.images.outputs.ldap-tag }}
    steps:
      - name: Setup CDK Environment
        uses: ./.github/actions/setup-cdk
        with:
          aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHubActions-Demo

      - name: Extract Image Tags
        id: images
        run: |
          VERSION=$(jq -r '.context."dev-test".authentik.authentikVersion' cdk.json)
          BRANDING=$(jq -r '.context."dev-test".authentik.branding' cdk.json)
          REVISION=$(jq -r '.context."dev-test".authentik.buildRevision' cdk.json)
          
          AUTHENTIK_TAG="authentik-${VERSION}-${BRANDING}-r${REVISION}"
          LDAP_TAG="ldap-${VERSION}-r${REVISION}"
          
          echo "authentik-tag=$AUTHENTIK_TAG" >> $GITHUB_OUTPUT
          echo "ldap-tag=$LDAP_TAG" >> $GITHUB_OUTPUT

      - name: Deploy Demo with Prod Profile
        # Use dev-test Redis settings to avoid slow Redis changes (>1 hour deployment)
        run: npm run cdk deploy -- --context envType=prod --context stackName=${{ vars.STACK_NAME }} --context adminUserEmail=${{ vars.AUTHENTIK_ADMIN_EMAIL }} --context nodeType=cache.t3.micro --context numCacheNodes=1 --context useS3AuthentikConfigFile=true --context usePreBuiltImages=true --context authentikImageTag=${{ steps.images.outputs.authentik-tag }} --context ldapImageTag=${{ steps.images.outputs.ldap-tag }} --require-approval never

      - name: Wait for Testing Period
        run: sleep ${{ vars.DEMO_TEST_DURATION || '300' }}

      - name: Run Automated Tests
        run: |
          echo "Placeholder for automated tests"
          # TODO: Add health checks and integration tests
          # curl -f https://${{ vars.R53_ZONE_NAME }}/health || exit 1

  # Always revert demo environment back to dev-test configuration
  # Ensures demo environment is left in a consistent state regardless of test results
  revert-to-dev-test:
    runs-on: ubuntu-latest
    environment: demo
    needs: [deploy-and-test]
    if: always()
    steps:
      - name: Setup CDK Environment
        uses: ./.github/actions/setup-cdk
        with:
          aws-role-arn: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-session-name: GitHubActions-Demo

      - name: Validate CDK Synthesis (Dev-Test Profile)
        run: npm run cdk synth -- --context envType=dev-test --context stackName=${{ vars.STACK_NAME }} --context adminUserEmail=${{ vars.AUTHENTIK_ADMIN_EMAIL }}

      - name: Revert Demo to Dev-Test Profile
        run: npm run cdk deploy -- --context envType=dev-test --context stackName=${{ vars.STACK_NAME }} --context adminUserEmail=${{ vars.AUTHENTIK_ADMIN_EMAIL }} --context usePreBuiltImages=true --context authentikImageTag=${{ needs.deploy-and-test.outputs.authentik-tag }} --context ldapImageTag=${{ needs.deploy-and-test.outputs.ldap-tag }} --require-approval never